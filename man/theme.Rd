% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/theme.R
\name{theme}
\alias{theme}
\alias{with_theme}
\title{Get a value from the current theme}
\usage{
theme(
  key,
  default = abort(glue::glue("No value for `theme('{key}')`"), "no_theme_key")
)

with_theme(cascading_theme, expr)
}
\arguments{
\item{key}{A key}

\item{default}{A value to return if key is not defined in the current theme}

\item{cascading_theme}{A \link{CascadingTheme} (or something else with a \verb{$value()}
method)}

\item{expr}{An expression to evaluate with \code{cascading_theme} temporarily
set as the default theme}
}
\description{
Themes allow customization of default values that can be defined in a single
place. Using a \link{CascadingTheme} allows minimal repetition in defining these
values. Normally, a \link{Graphic} will be rendered by the \link{Builder} using
\code{\link[=with_theme]{with_theme()}}, such that a set of defaults is available. Any function that
gets called by the \link{Builder} or \link{Renderer} can use \code{\link[=theme]{theme()}} to make a default
value configurable.
}
\examples{
# if there is no theme set, the default value is returned
theme("first", "a sensible default value")

# with a theme set
test_theme <- CascadingTheme$new()$set_values("first" = 1)
with_theme(test_theme, 2 * theme("first"))

}
